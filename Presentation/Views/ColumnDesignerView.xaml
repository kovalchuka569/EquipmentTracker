<UserControl x:Class="Presentation.Views.ColumnDesignerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sf="http://schemas.syncfusion.com/wpf"
             xmlns:controls="clr-namespace:Presentation.Controls"
             xmlns:templateSelectors="clr-namespace:Presentation.TemplateSelectors"
             xmlns:converters="clr-namespace:Presentation.Converters"
             xmlns:behaviors="clr-namespace:Presentation.Behaviors"
             Style="{DynamicResource LoadUserControlAnimationBottomToTop}"
             x:Name="Root">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/MSControl/ListView.xaml" />
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/MSControl/Expander.xaml" />
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/IntegerTextBox/IntegerTextBox.xaml" />
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/DoubleTextBox/DoubleTextBox.xaml" />
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/CurrencyTextBox/CurrencyTextBox.xaml" />
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/PropertyGrid/PropertyGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Presentation;component/Resources/Icons/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Presentation;component/Styles/Animations/LoadUserControlAnimationBottomToTop.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <converters:InverseBooleanVisibilityConverter x:Key="InverseBooleanVisibilityConverter"/>
            <converters:LongToIntConverter x:Key="LongToIntConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
            <Style x:Key="PropertyNameStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <DataTemplate x:Key="TextBoxEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <TextBox Text="{Binding Path=Value, 
                                            Mode=TwoWay, 
                                            UpdateSourceTrigger=PropertyChanged, 
                                            ValidatesOnDataErrors=True}"
                                            Validation.ErrorTemplate="{StaticResource UnfoldingErrorTemplate}"
                                            Margin="5,0,0,0"
                                            FontFamily="Segoe UI"
                                            Width="200"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="CheckBoxEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <CheckBox IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Margin="5,0,0,0"
                              Width="150"/>
                    
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="IntegerTextBoxEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <sf:IntegerTextBox Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource LongToIntConverter}}"
                                       MaxValue="12"
                                       Margin="5,0,0,0"
                                       FontFamily="Segoe UI"
                                       Width="150"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="MinMaxNumberEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <sf:DoubleTextBox Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Validation.ErrorTemplate="{StaticResource UnfoldingErrorTemplate}"
                                      Margin="5,0,0,0"
                                      NumberDecimalDigits="{Binding Owner.NumberDecimalDigits}"
                                      FontFamily="Segoe UI"
                                      Width="150"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="DoubleTextBoxEditor">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <sf:DoubleTextBox Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                      Validation.ErrorTemplate="{StaticResource UnfoldingErrorTemplate}"
                                      Margin="5,0,0,0"
                                      FontFamily="Segoe UI"
                                      Width="150"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="DatePatternEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <ComboBox
                        ItemsSource="{Binding Owner.DatePatterns}"
                        SelectedItem="{Binding Owner.SelectedDatePattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Margin="5,0,0,0"
                        Width="250">
                        
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding Label}"
                                               FontWeight="DemiBold"
                                               FontFamily="Segoe UI"/>
                                    
                                    <TextBlock Text="{Binding Example}"
                                               Margin="0,3,0,0"
                                               FontFamily="Segoe UI"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        
                        </ComboBox>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="CurrencySymbolEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                    <ComboBox
                        ItemsSource="{Binding Owner.CurrencySymbols}"
                        SelectedItem="{Binding Owner.SelectedCurrencySymbol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Margin="5,0,0,0"
                        Width="250">
                        
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Symbol}"
                                               FontWeight="DemiBold"
                                               FontFamily="Segoe UI"/>
                                    
                                    <TextBlock Text="{Binding Name}"
                                               Margin="5,0,0,0"
                                               FontFamily="Segoe UI"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        
                    </ComboBox>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="ListEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"
                               VerticalAlignment="Top"/>
                    
                    <StackPanel Margin="5,0,0,0">
                        <StackPanel Orientation="Horizontal">
                            <TextBox Text="{Binding Owner.ItemCandidate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     FontFamily="Segoe UI"
                                     Width="150"/>
                            
                            <controls:HoverButton
                                x:Name="AddListValueButton"
                                IsEnabled="{Binding Owner.HasItemCandidateHaveErrors, Converter={StaticResource InverseBooleanConverter}}"
                                Margin="5,0,0,0"
                                TextContent="Додати"
                                Width="70"
                                Height="20"
                                NormalBackground="#09244B"
                                HoverBackground="#E8E8E8"
                                ContentFill="White"
                                HoverContentFill="#09244B"
                                ContentPadding="4"
                                TextFontSize="12"
                                TextFontFamily="Segoe UI"
                                ButtonCornerRadius="4"
                                ChangeIconHover="False">
                                
                                <i:Interaction.Triggers>
                                    <i:EventTrigger SourceObject="{Binding ElementName=AddListValueButton}"
                                                    EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Owner.AddListValueCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </controls:HoverButton>
                            
                        </StackPanel>
                        
                        <controls:HoverButton
                            x:Name="OpenListPopupButton"
                            Margin="0,5,0,0"
                            HorizontalAlignment="Left"
                            TextContent="{Binding Owner.ShowListValuesButtonText}"
                            Width="180"
                            Height="20"
                            NormalBackground="#09244B"
                            HoverBackground="#E8E8E8"
                            ContentFill="White"
                            HoverContentFill="#09244B"
                            ContentPadding="4"
                            TextFontSize="12"
                            TextFontFamily="Segoe UI"
                            ButtonCornerRadius="4"
                            ChangeIconHover="False">
                                
                            <i:Interaction.Triggers>
                                <i:EventTrigger SourceObject="{Binding ElementName=OpenListPopupButton}"
                                                EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Owner.OpenListPopupCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            
                        </controls:HoverButton>
                        
                        <Popup 
                            x:Name="ListValuesPopup"
                            PopupAnimation="Slide"
                            AllowsTransparency="True"
                            IsOpen="{Binding Owner.IsListValuesPopupOpen, UpdateSourceTrigger=PropertyChanged}" 
                            Placement="Right" 
                            PlacementTarget="{Binding ElementName=OpenListPopupButton}">
                            
                            <Border CornerRadius="4"
                                    BorderThickness="1"
                                    BorderBrush="#09244B"
                                    Background="White">
                                
                                <StackPanel>
                                
                                    <TextBlock Text="Список значень:"
                                               FontWeight="DemiBold"
                                               HorizontalAlignment="Center"/>
                                    
                                    <TextBlock Text="Значення відсутні"
                                               Visibility="{Binding Owner.EmptyListValuesTipVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               Foreground="Gray"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"/>
                                    
                                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto"
                                                  Height="200"
                                                  MaxHeight="200"
                                                  Width="200"
                                                  MaxWidth="200">
                                        
                                        <ListView ItemsSource="{Binding Owner.ListValues, UpdateSourceTrigger=PropertyChanged}">
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding}"/>
                                                        
                                                        <controls:HoverButton
                                                            x:Name="DeleteListValueButton"
                                                            Margin="10,0,0,0"
                                                            NormalIconContent="{StaticResource CloseBlackLine32}"
                                                            HoverIconContent="{StaticResource CloseLightLine32}"
                                                            Width="20"
                                                            Height="20"
                                                            ButtonCornerRadius="4"
                                                            NormalIconHeight="16"
                                                            NormalIconWidth="16"
                                                            HoverIconHeight="16"
                                                            HoverIconWidth="16"
                                                            ContentPadding="4"
                                                            HoverBackground="Red"
                                                            ChangeIconHover="True"
                                                            ToolTip="Видалити">
                                                            
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                                    <i:InvokeCommandAction 
                                                                        Command="{Binding DataContext.Owner.DeleteListValueCommand, RelativeSource={RelativeSource AncestorType=Popup}}"
                                                                        CommandParameter="{Binding}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                            
                                                        </controls:HoverButton>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </ScrollViewer>
                                    
                                </StackPanel>
                            </Border>
                            
                            <i:Interaction.Triggers>
                                <i:EventTrigger SourceObject="{Binding ElementName=ListValuesPopup}"
                                                EventName="MouseLeave">
                                    <i:InvokeCommandAction Command="{Binding Owner.ListValuesPopupMouseLeaveCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            
                        </Popup>
                    </StackPanel>
                </StackPanel>
                
            </DataTemplate>
            
            <!-- Default editor templates -->
            
            <DataTemplate x:Key="TextDefaultEditorTemplate">
                <TextBox Text="{Binding Path=Owner.DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource UnfoldingErrorTemplate}"
                         Margin="5,0,0,0"
                         FontFamily="Segoe UI"
                         Width="200"/>
            </DataTemplate>
            
            <DataTemplate x:Key="NumberDefaultEditorTemplate">
                <sf:DoubleTextBox Value="{Binding Path=Owner.DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                  Validation.ErrorTemplate="{StaticResource UnfoldingErrorTemplate}"
                                  NumberDecimalDigits="{Binding Owner.NumberDecimalDigits}"
                                  FontFamily="Segoe UI"
                                  Width="150"/>

            </DataTemplate>
            
            <DataTemplate x:Key="DateDefaultEditorTemplate">
                <sf:DateTimeEdit
                    DateTime="{Binding Owner.DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Pattern="CustomPattern"
                    CustomPattern="{Binding Owner.SelectedDatePattern.Pattern}"
                    Width="150"/>
            </DataTemplate>
            
            <DataTemplate x:Key="CheckBoxDefaultEditorTemplate">
                <CheckBox
                    IsChecked="{Binding Owner.DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataTemplate>
            
            <DataTemplate x:Key="CurrencyDefaultEditorTemplate">
                <sf:CurrencyTextBox
                    Value="{Binding Owner.DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    CurrencySymbol="{Binding Owner.SelectedCurrencySymbol.Symbol}"
                    CurrencyDecimalSeparator=" "
                    Width="150"
                    FontFamily="Segoe UI"/>
            </DataTemplate>
            
            <DataTemplate x:Key="ListDefaultEditorTemplate">
                <ComboBox ItemsSource="{Binding Owner.ListValues, Mode=TwoWay}"
                          SelectedItem="{Binding Owner.DefaultValue, Mode=TwoWay}"
                          FontFamily="Segoe UI"
                          Width="150"/>
            </DataTemplate>
            
            <templateSelectors:DefaultEditorTemplateSelector x:Key="DefaultEditorTemplateSelector"
                                                             UndefinedEditorTemplate="{StaticResource DefaultUndefinedTemplate}"
                                                             TextDefaultEditorTemplate="{StaticResource TextDefaultEditorTemplate}"
                                                             NumberDefaultEditorTemplate="{StaticResource NumberDefaultEditorTemplate}"
                                                             DateDefaultEditorTemplate="{StaticResource DateDefaultEditorTemplate}"
                                                             BooleanDefaultEditorTemplate="{StaticResource CheckBoxDefaultEditorTemplate}"
                                                             CurrencyDefaultEditorTemplate="{StaticResource CurrencyDefaultEditorTemplate}"
                                                             ListDefaultEditorTemplate="{StaticResource ListDefaultEditorTemplate}"
                                                             LinkDefaultEditorTemplate="{StaticResource TextDefaultEditorTemplate}"/>
            
            <DataTemplate x:Key="DefaultValueEditorTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding DisplayName}"
                               Style="{StaticResource PropertyNameStyle}"/>
                    
                        
                        <CheckBox 
                            x:Name="HaveDefaultValueCheckBox"
                            Margin="5,0,0,0"
                            ToolTip="Увімкнути/вимкнути значення за замовчуванням"
                            IsChecked="{Binding Owner.HasDefaultValue, Mode=TwoWay}"/>
                        
                        <ContentControl 
                            Content="{Binding}" 
                            ContentTemplateSelector="{StaticResource DefaultEditorTemplateSelector}"
                            Margin="5,0,0,0"
                            Visibility="{Binding Owner.HasDefaultValue, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                
            </DataTemplate>
            
            
            <templateSelectors:ColumnPropertyEditorTemplateSelector x:Key="ColumnPropertyTemplateSelector"
                    UndefinedEditorTemplate="{StaticResource DefaultUndefinedTemplate}"
                    TextBoxEditorTemplate="{StaticResource TextBoxEditorTemplate}"
                    DoubleTextBoxEditorTemplate="{StaticResource DoubleTextBoxEditor}"
                    IntegerTextBoxEditorTemplate="{StaticResource IntegerTextBoxEditorTemplate}"
                    CheckBoxEditorTemplate="{StaticResource CheckBoxEditorTemplate}"
                    DefaultValueEditor="{StaticResource DefaultValueEditorTemplate}"
                    MinMaxNumberEditorTemplate="{StaticResource MinMaxNumberEditorTemplate}"
                    DatePatternEditorTemplate="{StaticResource DatePatternEditorTemplate}"
                    CurrencySymbolEditorTemplate="{StaticResource CurrencySymbolEditorTemplate}"
                    ListEditorTemplate="{StaticResource ListEditorTemplate}"/>
            
            
            <CollectionViewSource x:Key="GroupedSettings" Source="{Binding SelectedColumnPropertyEntries}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Category" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
            
            
        </ResourceDictionary>
    </UserControl.Resources>


    <Border
        Background="White"
        CornerRadius="8">

        <Grid>
            
            <!-- Close button -->
            <controls:HoverButton
                x:Name="CloseDesignerButton"
                NormalIconContent="{StaticResource CloseBlackLine32}"
                HoverIconContent="{StaticResource CloseLightLine32}"
                VerticalAlignment="Top" HorizontalAlignment="Right"
                ButtonCornerRadius="0,8,0,0"
                NormalIconHeight="16"
                NormalIconWidth="16"
                HoverIconHeight="16"
                HoverIconWidth="16"
                ContentPadding="6"
                HoverBackground="Red"
                ChangeIconHover="True"
                ToolTip="Закрити" />

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- Title -->
                    <RowDefinition Height="1" />  <!-- Separator -->
                    <RowDefinition Height="*" />    <!-- Content -->
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Text="Редактор стовпців"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                           FontFamily="Segoe UI"
                           FontSize="14"
                           FontWeight="DemiBold"
                           Margin="0,5,0,5" />

                <Border Grid.Row="1"
                        Background="LightGray" />

                <ScrollViewer Grid.Row="2"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Disabled"
                              MaxWidth="800"
                              MaxHeight="500"
                              Width="800"
                              Height="500"
                              Margin="0,5,0,0">

                    <Grid
                        Margin="12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1.25*" />
                        </Grid.ColumnDefinitions>

                        <!-- Columns list -->
                        <GroupBox Grid.Column="0"
                                  Header="Стовпці"
                                  Margin="0,0,5,0">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <ListView
                                    Grid.Row="0"
                                    x:Name="ColumnsList"
                                    ItemsSource="{Binding ColumnProperties}"
                                    SelectedItem="{Binding SelectedColumnProperties}"
                                    FontFamily="Segoe UI"
                                    MaxHeight="408"
                                    AllowDrop="True"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Border CornerRadius="4,0,0,4"
                                                        BorderThickness="1"
                                                        BorderBrush="{Binding HasErrors, Converter={StaticResource BooleanToBrushConverter}}">
                                                    <StackPanel Orientation="Horizontal"
                                                                Margin="3">
                                                        
                                                        <Image Source="{StaticResource DeleteColumnColoredLine64}"
                                                               Visibility="{Binding MarkedForDelete, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                               Width="16"
                                                               Height="16"/>
                                                        
                                                        <TextBlock 
                                                            Text="{Binding HeaderText,
                                                            Mode=TwoWay, 
                                                            UpdateSourceTrigger=PropertyChanged,
                                                            ValidatesOnNotifyDataErrors=False,
                                                            ValidatesOnDataErrors=False,
                                                            ValidatesOnExceptions=False}"
                                                            Margin="5,0,0,0"
                                                            FontFamily="Segoe UI"
                                                            FontSize="14"/>
                                                        
                                                            <ComboBox
                                                                IsEnabled="{Binding IsNew}"
                                                                Margin="5,0,0,0"
                                                                ItemsSource="{Binding ColumnDataTypes}"
                                                                SelectedItem="{Binding SelectedColumnDataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                DisplayMemberPath="Display">
                                                                
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="DropDownOpened">
                                                                        <i:InvokeCommandAction Command="{Binding DataContext.ColumnDataTypesOpenedCommand, ElementName=Root}"
                                                                            CommandParameter="{Binding}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                                
                                                            </ComboBox>
                                                    </StackPanel>
                                                </Border>
                                                    
                                                <Border Visibility="{Binding HasErrors, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                        Background="Red"
                                                        CornerRadius="0,4,4,0">
                                                    
                                                    <TextBlock Text="Виправіть помилки"
                                                               Foreground="White"
                                                               FontFamily="Segoe UI"
                                                               FontSize="12"
                                                               VerticalAlignment="Center"
                                                               Margin="3"/>
                                                </Border>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    
                                    <i:Interaction.Behaviors>
                                        <behaviors:ListViewDragDropBehavior DropCommand="{Binding ColumnsListDropCommand}"/>
                                    </i:Interaction.Behaviors>
                                    
                                </ListView>

                                <StackPanel Grid.Row="1"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Right"
                                            Margin="0,5">

                                    <!-- Remove mark for delete column button -->
                                    <controls:HoverButton
                                        x:Name="RemoveMarkForDeleteButton"
                                        Visibility="{Binding SelectedItem.MarkedForDelete, ElementName=ColumnsList, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        TextContent="Зняти помітку для видалення"
                                        Width="210"
                                        Height="30"
                                        NormalBackground="#E8E8E8"
                                        HoverBackground="Transparent"
                                        ContentFill="Black"
                                        HoverContentFill="Black"
                                        ButtonCornerRadius="4"
                                        ContentPadding="4"
                                        TextFontSize="12"
                                        TextFontFamily="Segoe UI"
                                        Margin="0,0,20,0"/>
                                    
                                    <!-- Mark for delete column button -->
                                    <controls:HoverButton
                                        x:Name="MarkForDeleteButton"
                                        Visibility="{Binding SelectedItem.MarkedForDelete, ElementName=ColumnsList, Converter={StaticResource InverseBooleanVisibilityConverter}}"
                                        TextContent="Помітити під видалення"
                                        Width="200"
                                        Height="30"
                                        ChangeIconHover="True"
                                        NormalBackground="Red"
                                        HoverBackground="#E8E8E8"
                                        ContentFill="White"
                                        HoverContentFill="Black"
                                        ButtonCornerRadius="4"
                                        ContentPadding="4"
                                        TextFontSize="12"
                                        TextFontFamily="Segoe UI"
                                        Margin="0,0,20,0"
                                        HoverIconWidth="16"
                                        NormalIconWidth="16"
                                        HoverIconHeight="16"
                                        NormalIconHeight="16"
                                        NormalIconContent="{StaticResource TrashLightLine32}"
                                        HoverIconContent="{StaticResource TrashBlackLine32}" />

                                    <!-- Add column button -->
                                    <controls:HoverButton
                                        x:Name="AddColumnButton"
                                        TextContent="Додати"
                                        Width="100"
                                        Height="30"
                                        NormalBackground="#E8E8E8"
                                        HoverBackground="Transparent"
                                        ContentFill="Black"
                                        HoverContentFill="Black"
                                        ContentPadding="4"
                                        TextFontSize="12"
                                        TextFontFamily="Segoe UI"
                                        ButtonCornerRadius="4"
                                        HoverIconWidth="16"
                                        NormalIconWidth="16"
                                        HoverIconHeight="16"
                                        NormalIconHeight="16"
                                        NormalIconContent="{StaticResource AddGreenLine20}" />

                                </StackPanel>
                            </Grid>

                        </GroupBox>
                        
                        <!-- Properties list -->
                        <GroupBox Grid.Column="1" Header="Властивості">

                            <Grid>
                                
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                    <ListView
                                        Grid.Row="0"
                                        x:Name="ColumnPropertiesList"
                                        ItemsSource="{Binding Source={StaticResource GroupedSettings}}"
                                        ItemTemplateSelector="{StaticResource ColumnPropertyTemplateSelector}"  
                                        FontFamily="Segoe UI"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    
                                    
                                    <ListView.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <Border Background="#E8E8E8"
                                                            CornerRadius="4">
                                                        <TextBlock Text="{Binding Name}" 
                                                                   FontWeight="DemiBold" 
                                                                   FontSize="14"  
                                                                   Margin="0,0,0,4"
                                                                   HorizontalAlignment="Center"/>
                                                    </Border>
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </ListView.GroupStyle>
                                    
                                    
                                </ListView>
                                
                                <!-- Selected property description -->
                                <Border
                                    Grid.Row="1"
                                    Background="#E8E8E8"
                                    VerticalAlignment="Bottom"
                                    CornerRadius="4">
                                    
                                    <StackPanel
                                        Margin="3">
                                        
                                        <TextBlock Text="{Binding ElementName=ColumnPropertiesList, Path=SelectedItem.DisplayName}"
                                                   Style="{StaticResource PropertyNameStyle}"
                                                   FontSize="14"/>
                                        
                                        <TextBlock Text="{Binding ElementName=ColumnPropertiesList, Path=SelectedItem.Description}"
                                                   TextWrapping="Wrap"/>
                                    </StackPanel>
                                    
                                </Border>
                                
                                <!-- Save button -->
                                <controls:HoverButton 
                                    x:Name="SaveButton"
                                    IsEnabled="{Binding HasPropertiesErrors, Converter={StaticResource InverseBooleanConverter}}"
                                    Grid.Row="2"
                                    HorizontalAlignment="Right"
                                    Margin="0,5"
                                    TextContent="Зберегти"
                                    Width="100"
                                    Height="30"
                                    NormalBackground="#09244B"
                                    HoverBackground="#E8E8E8"
                                    ContentFill="White"
                                    HoverContentFill="#09244B"
                                    ContentPadding="4"
                                    TextFontSize="12"
                                    TextFontFamily="Segoe UI"
                                    ButtonCornerRadius="4"
                                    HoverIconWidth="16"
                                    NormalIconWidth="16"
                                    HoverIconHeight="16"
                                    NormalIconHeight="16"
                                    ChangeIconHover="True"
                                    NormalIconContent="{StaticResource SaveLightLine48}"
                                    HoverIconContent="{StaticResource SaveDarkLine48}"/>
                                
                            </Grid>
                        </GroupBox>

                    </Grid>

                </ScrollViewer>

            </Grid>
        </Grid>
    </Border>

    <i:Interaction.Triggers>
        
        <i:EventTrigger SourceObject="{Binding ElementName=AddColumnButton}"
                        EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding AddColumnCommand}" />
        </i:EventTrigger>

        <i:EventTrigger SourceObject="{Binding ElementName=CloseDesignerButton}"
                        EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding CancelDialogCommand}" />
        </i:EventTrigger>
        
        <i:EventTrigger SourceObject="{Binding ElementName=MarkForDeleteButton}"
                        EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding MarkForDeleteCommand}" />
        </i:EventTrigger>
        
        <i:EventTrigger SourceObject="{Binding ElementName=RemoveMarkForDeleteButton}"
                        EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding RemoveMarkForDeleteCommand}" />
        </i:EventTrigger>
        
        <i:EventTrigger SourceObject="{Binding ElementName=SaveButton}"
                        EventName="MouseLeftButtonUp">
            <i:InvokeCommandAction Command="{Binding SaveCommand}" />
        </i:EventTrigger>
        
    </i:Interaction.Triggers>
</UserControl>
