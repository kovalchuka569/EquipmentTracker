<UserControl x:Class="EquipmentTracker.Views.SummarySheet.SummaryColumnTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:Models.Summary.ColumnTree;assembly=Models"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sf="http://schemas.syncfusion.com/wpf"
             mc:Ignorable="d">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/sftreeview/sftreeview.xaml"/>
                <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/mscontrol/button.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <sf:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <ProgressBar Grid.Row="0" IsIndeterminate="True" Visibility="{Binding ProgressbarVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
                <sf:SfTreeView Grid.Row="1"
                FocusVisualStyle="{x:Null}"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                AllowDeleting="False"
                AllowEditing="False"
                ShowLines="True"
                ShowRootLines="True"
                IsAnimationEnabled="True"
                SelectionMode="SingleDeselect"
                ItemHeight="25"
                SelectionBackgroundColor="LightGray"
                SelectionForegroundColor="Blue"
                ExpandActionTrigger="Node"
                SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                ItemsSource="{Binding Items}">
            
            <sf:SfTreeView.HierarchyPropertyDescriptors>
                <sf:HierarchyPropertyDescriptor
                    ChildPropertyName="Children"
                    TargetType="{x:Type models:FolderItem}"/>
                
                <sf:HierarchyPropertyDescriptor
                    ChildPropertyName="Children"
                    TargetType="{x:Type models:FileItem}"/>
                
                <sf:HierarchyPropertyDescriptor
                    ChildPropertyName="Children"
                    TargetType="{x:Type models:ColumnItem}"/>
            </sf:SfTreeView.HierarchyPropertyDescriptors>
            
            <sf:SfTreeView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <CheckBox x:Name="CheckBox" Grid.Column="0" IsChecked="{Binding IsSelected, Mode=TwoWay}" Visibility="{Binding HaveChilds, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding DataContext.CheckedNodeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                                
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding DataContext.UncheckedNodeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                        
                        <Image Grid.Column="1" 
                               Source="{Binding ImageIcon}"
                               Width="20"
                               Margin="3,0,0,0"
                               Height="20"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                        
                        <TextBlock Grid.Column="2"  
                                   Text="{Binding Name}"
                                   VerticalAlignment="Center"
                                   FontWeight="DemiBold"
                                   Foreground="{Binding Foreground}"
                                   FontFamily="Segoe UI"
                                   FontSize="11"
                                   Padding="4 0 0 0"/>
                        
                        <!-- If checkbox collapsed - dont have childs, make translucent-->
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=CheckBox, Path=Visibility}" Value="Collapsed">
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=CheckBox, Path=Visibility}" Value="Visible">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </DataTemplate>
            </sf:SfTreeView.ItemTemplate>
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="NodeExpanded">
                        <i:InvokeCommandAction Command="{Binding NodeExpandedCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    
                    <i:EventTrigger EventName="NodeCollapsed">
                        <i:InvokeCommandAction Command="{Binding NodeCollapsedCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                        
            </i:Interaction.Triggers>
            
        </sf:SfTreeView>
    </Grid>
</UserControl>
