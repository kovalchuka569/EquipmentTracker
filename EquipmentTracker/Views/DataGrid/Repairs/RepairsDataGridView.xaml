<UserControl x:Class="UI.Views.DataGrid.Repairs.RepairsDataGridView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:UI.Views.DataGrid.Repairs"
             mc:Ignorable="d"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:sf="clr-namespace:Syncfusion.UI.Xaml.Grid;assembly=Syncfusion.SfGrid.WPF"
             xmlns:grid="clr-namespace:Syncfusion.UI.Xaml.Grid;assembly=Syncfusion.SfGrid.WPF"
             xmlns:syncfusionskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
             syncfusionskin:SfSkinManager.Theme="{syncfusionskin:SkinManagerExtension ThemeName=Office2019Colorful}">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    
        <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <ProgressBar Grid.Row="0" Visibility="{Binding ProgressBarVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled = "True" IsIndeterminate="True" Orientation="Horizontal" VerticalAlignment="Top"/>
        
            <grid:SfDataGrid Grid.Row="1"
            GridLinesVisibility="Both"
            HeaderLinesVisibility="Both"
            ShowBusyIndicator="True"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            ShowColumnWhenGrouped="False"
            LiveDataUpdateMode="AllowDataShaping"
            AllowFiltering="True"
            AllowGrouping="True"
            ShowGroupDropArea="True"
            SelectionMode="Single"
            x:Name="RepairsDataGrid"
            ItemsSource="{Binding Repairs}"
            SelectedItem="{Binding SelectedRepair, Mode=TwoWay}"
            AutoGenerateColumns="False">
            
            <grid:SfDataGrid.Columns>
                
                <grid:GridTextColumn MappingName="EquipmentInventoryNumber" HeaderText="Інвентарний номер" AllowGrouping="True">
                    <grid:GridTextColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding EquipmentInventoryNumberDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTextColumn.CellTemplate>
                </grid:GridTextColumn>
            
                <grid:GridTextColumn MappingName="EquipmentBrand" HeaderText="Бренд" AllowGrouping="True">
                    <grid:GridTextColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding EquipmentBrandDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTextColumn.CellTemplate>
                </grid:GridTextColumn>
                
                <grid:GridTextColumn MappingName="EquipmentModel" HeaderText="Модель" AllowGrouping="True">
                    <grid:GridTextColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding EquipmentModelDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTextColumn.CellTemplate>
                </grid:GridTextColumn>
                
                <grid:GridTextColumn MappingName="Status" HeaderText="Статус" AllowGrouping="True">
                    <grid:GridTextColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding StatusDisplay}" Background="{Binding StatusBackground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTextColumn.CellTemplate>
                </grid:GridTextColumn>
                
                <grid:GridTextColumn MappingName="BreakDescription" HeaderText="Опис поломки" AllowGrouping="False">
                    <grid:GridTextColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding BreakDescriptionDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTextColumn.CellTemplate>
                </grid:GridTextColumn>
                
                <grid:GridDateTimeColumn MappingName="StartDate" Pattern="CustomPattern" CustomPattern="dd.MM.yyyy HH:mm" AllowNullValue="True" NullValue="{x:Null}" HeaderText="Дата початку" AllowGrouping="True">
                    <grid:GridDateTimeColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding StartDateDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridDateTimeColumn.CellTemplate>
                </grid:GridDateTimeColumn>
                
                <grid:GridDateTimeColumn MappingName="EndDate" Pattern="CustomPattern" CustomPattern="dd.MM.yyyy HH:mm" AllowNullValue="True" NullValue="{x:Null}" HeaderText="Дата кінця"  AllowGrouping="True">
                    <grid:GridDateTimeColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding EndDateDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridDateTimeColumn.CellTemplate>
                </grid:GridDateTimeColumn>
                
                <grid:GridTimeSpanColumn MappingName="Duration" Format="d 'д' h 'год' m 'хв'" AllowNull="True" NullText="{x:Null}" HeaderText="Витрачено часу" AllowGrouping="False">
                    <grid:GridTimeSpanColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DurationDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTimeSpanColumn.CellTemplate>
                </grid:GridTimeSpanColumn>
                
                <grid:GridTextColumn MappingName="Worker" HeaderText="Працівник" AllowGrouping="True">
                    <grid:GridTextColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding WorkerDisplay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </grid:GridTextColumn.CellTemplate>
                </grid:GridTextColumn>
            
            </grid:SfDataGrid.Columns>
                
                <grid:SfDataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Редагувати" Command="{Binding EditRepairCommand}" Visibility="{Binding EditRepairContextMenuVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <MenuItem Header="Створити новий ремонт" Command="{Binding CreateNewRepairCommand}"/>
                        <MenuItem Header="Оновити" Command="{Binding RefreshCommand}"/>
                        <MenuItem Header="Друкувати" Command="{Binding PrintCommand}"/>
                        <MenuItem Header="Експорт в Excel" Command="{Binding ExcelExportCommand}"/>
                        <MenuItem Header="Експорт в PDF" Command="{Binding PdfExportCommand}"/>
                        
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding ContextMenuLoadedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ContextMenu>
                </grid:SfDataGrid.ContextMenu>
            
                    <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding RepairsDataGridLoadedCommand}"
                                               CommandParameter="{Binding ElementName=RepairsDataGrid}"/>
                    </i:EventTrigger>
            </i:Interaction.Triggers>
                
        </grid:SfDataGrid>
        </Grid>
</UserControl>
